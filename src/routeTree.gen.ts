/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as TextInputIndexImport } from './routes/text-input/index'
import { Route as TeamSectionIndexImport } from './routes/team-section/index'
import { Route as NavbarIndexImport } from './routes/navbar/index'
import { Route as FeaturesGridIndexImport } from './routes/features-grid/index'
import { Route as ButtonIndexImport } from './routes/button/index'
import { Route as BadgeIndexImport } from './routes/badge/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const TextInputIndexRoute = TextInputIndexImport.update({
  id: '/text-input/',
  path: '/text-input/',
  getParentRoute: () => rootRoute,
} as any)

const TeamSectionIndexRoute = TeamSectionIndexImport.update({
  id: '/team-section/',
  path: '/team-section/',
  getParentRoute: () => rootRoute,
} as any)

const NavbarIndexRoute = NavbarIndexImport.update({
  id: '/navbar/',
  path: '/navbar/',
  getParentRoute: () => rootRoute,
} as any)

const FeaturesGridIndexRoute = FeaturesGridIndexImport.update({
  id: '/features-grid/',
  path: '/features-grid/',
  getParentRoute: () => rootRoute,
} as any)

const ButtonIndexRoute = ButtonIndexImport.update({
  id: '/button/',
  path: '/button/',
  getParentRoute: () => rootRoute,
} as any)

const BadgeIndexRoute = BadgeIndexImport.update({
  id: '/badge/',
  path: '/badge/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/badge/': {
      id: '/badge/'
      path: '/badge'
      fullPath: '/badge'
      preLoaderRoute: typeof BadgeIndexImport
      parentRoute: typeof rootRoute
    }
    '/button/': {
      id: '/button/'
      path: '/button'
      fullPath: '/button'
      preLoaderRoute: typeof ButtonIndexImport
      parentRoute: typeof rootRoute
    }
    '/features-grid/': {
      id: '/features-grid/'
      path: '/features-grid'
      fullPath: '/features-grid'
      preLoaderRoute: typeof FeaturesGridIndexImport
      parentRoute: typeof rootRoute
    }
    '/navbar/': {
      id: '/navbar/'
      path: '/navbar'
      fullPath: '/navbar'
      preLoaderRoute: typeof NavbarIndexImport
      parentRoute: typeof rootRoute
    }
    '/team-section/': {
      id: '/team-section/'
      path: '/team-section'
      fullPath: '/team-section'
      preLoaderRoute: typeof TeamSectionIndexImport
      parentRoute: typeof rootRoute
    }
    '/text-input/': {
      id: '/text-input/'
      path: '/text-input'
      fullPath: '/text-input'
      preLoaderRoute: typeof TextInputIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/badge': typeof BadgeIndexRoute
  '/button': typeof ButtonIndexRoute
  '/features-grid': typeof FeaturesGridIndexRoute
  '/navbar': typeof NavbarIndexRoute
  '/team-section': typeof TeamSectionIndexRoute
  '/text-input': typeof TextInputIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/badge': typeof BadgeIndexRoute
  '/button': typeof ButtonIndexRoute
  '/features-grid': typeof FeaturesGridIndexRoute
  '/navbar': typeof NavbarIndexRoute
  '/team-section': typeof TeamSectionIndexRoute
  '/text-input': typeof TextInputIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/badge/': typeof BadgeIndexRoute
  '/button/': typeof ButtonIndexRoute
  '/features-grid/': typeof FeaturesGridIndexRoute
  '/navbar/': typeof NavbarIndexRoute
  '/team-section/': typeof TeamSectionIndexRoute
  '/text-input/': typeof TextInputIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/badge'
    | '/button'
    | '/features-grid'
    | '/navbar'
    | '/team-section'
    | '/text-input'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/badge'
    | '/button'
    | '/features-grid'
    | '/navbar'
    | '/team-section'
    | '/text-input'
  id:
    | '__root__'
    | '/'
    | '/badge/'
    | '/button/'
    | '/features-grid/'
    | '/navbar/'
    | '/team-section/'
    | '/text-input/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BadgeIndexRoute: typeof BadgeIndexRoute
  ButtonIndexRoute: typeof ButtonIndexRoute
  FeaturesGridIndexRoute: typeof FeaturesGridIndexRoute
  NavbarIndexRoute: typeof NavbarIndexRoute
  TeamSectionIndexRoute: typeof TeamSectionIndexRoute
  TextInputIndexRoute: typeof TextInputIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BadgeIndexRoute: BadgeIndexRoute,
  ButtonIndexRoute: ButtonIndexRoute,
  FeaturesGridIndexRoute: FeaturesGridIndexRoute,
  NavbarIndexRoute: NavbarIndexRoute,
  TeamSectionIndexRoute: TeamSectionIndexRoute,
  TextInputIndexRoute: TextInputIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/badge/",
        "/button/",
        "/features-grid/",
        "/navbar/",
        "/team-section/",
        "/text-input/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/badge/": {
      "filePath": "badge/index.tsx"
    },
    "/button/": {
      "filePath": "button/index.tsx"
    },
    "/features-grid/": {
      "filePath": "features-grid/index.tsx"
    },
    "/navbar/": {
      "filePath": "navbar/index.tsx"
    },
    "/team-section/": {
      "filePath": "team-section/index.tsx"
    },
    "/text-input/": {
      "filePath": "text-input/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
